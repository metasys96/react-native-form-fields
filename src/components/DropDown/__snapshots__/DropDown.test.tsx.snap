
exports[`create snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "stretch",
      },
      undefined,
    ]
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    pointerEvents="box-only"
    style={
      Array [
        Object {
          "borderColor": "lightgrey",
          "borderWidth": 1,
          "height": 30,
          "justifyContent": "center",
          "paddingLeft": 5,
          "paddingRight": 5,
          "width": "100%",
        },
        undefined,
      ]
    }
  >
    <TextInput
      allowFontScaling={true}
      editable={false}
      rejectResponderTermination={true}
      style={
        Array [
          undefined,
          Object {
            "color": "#C7C7CD",
          },
        ]
      }
      underlineColorAndroid="transparent"
      value="Please select"
    />
    <View
      style={
        Array [
          Object {
            "marginRight": 5,
          },
          Object {
            "position": "absolute",
            "right": 0,
          },
          undefined,
        ]
      }
    >
      <View>
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
          theme={
            Object {
              "colors": Object {
                "disabled": "hsl(208, 8%, 90%)",
                "divider": "#bcbbc1",
                "error": "#ff190c",
                "grey0": "#393e42",
                "grey1": "#43484d",
                "grey2": "#5e6977",
                "grey3": "#86939e",
                "grey4": "#bdc6cf",
                "grey5": "#e1e8ee",
                "greyOutline": "#bbb",
                "platform": Object {
                  "android": Object {
                    "error": "#f44336",
                    "primary": "#2196f3",
                    "secondary": "#9C27B0",
                    "success": "#4caf50",
                    "warning": "#ffeb3b",
                  },
                  "ios": Object {
                    "error": "#ff3b30",
                    "primary": "#007aff",
                    "secondary": "#5856d6",
                    "success": "#4cd964",
                    "warning": "#ffcc00",
                  },
                },
                "primary": "#2089dc",
                "searchBg": "#303337",
                "secondary": "#8F0CE8",
                "success": "#52c41a",
                "warning": "#faad14",
              },
            }
          }
          underlayColor="white"
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "black",
                  "fontSize": 20,
                },
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "fontFamily": "FontAwesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
            testID="iconIcon"
          >
            ï„‡
          </Text>
        </View>
      </View>
    </View>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#f5f5f5",
            "borderTopColor": "#919498",
            "borderTopWidth": 0.5,
            "flexDirection": "row",
            "height": 44,
            "justifyContent": "flex-end",
            "paddingHorizontal": 10,
            "zIndex": 2,
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 4,
            "left": 4,
            "right": 4,
            "top": 4,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#007AFE",
                "fontSize": 15,
                "fontWeight": "bold",
                "paddingRight": 2,
                "paddingTop": 1,
              },
              undefined,
            ]
          }
        >
          Select
        </Text>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#F9f9f9",
            "justifyContent": "center",
          },
          Object {
            "height": 215,
          },
          undefined,
        ]
      }
    >
      <View>
        <RCTPicker
          items={Array []}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </Modal>
</View>
`;
